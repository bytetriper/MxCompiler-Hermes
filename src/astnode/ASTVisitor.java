package astnode;
import astnode.basicnode.*;
import astnode.exprnode.*;
import astnode.stmtsnode.*;
import astnode.defnode.*;
public interface ASTVisitor {
    public void visit(AstNode tmpnode);
    public void visit(ProgramNode tmpnode);  
    public void visit(SuiteNode tmpnode);    
    public void visit(BoolNode tmpnode);     
    public void visit(ConstNode tmpnode);    
    public void visit(FuncNode tmpnode);     
    public void visit(IndexNode tmpnode);    
    public void visit(IntegerNode tmpnode);  
    public void visit(LamFuncNode tmpnode);  
    public void visit(ListSufNode tmpnode);  
    public void visit(NullNode tmpnode);     
    public void visit(StringNode tmpnode);   
    public void visit(ThisNode tmpnode);     
    public void visit(TypeNode tmpnode);     
    public void visit(VarNode tmpnode);      
    public void visit(ClassdefNode tmpnode); 
    public void visit(ConstructordefNode tmpnode);
    public void visit(SingleAssignNode tmpnode);
    public void visit(DefNode tmpnode);
    public void visit(FuncdefNode tmpnode);
    public void visit(VardefNode tmpnode);
    public void visit(BinaryexprNode tmpnode);
    public void visit(ExprNode tmpnode);
    public void visit(MemberexprNode tmpnode);
    public void visit(PreexprNode tmpnode);
    public void visit(SufexprNode tmpnode);
    public void visit(BreakstmtNode tmpnode);
    public void visit(ContinuestmtNode tmpnode);
    public void visit(EmptystmtNode tmpnode);
    public void visit(ExprstmtNode tmpnode);
    public void visit(ForstmtNode tmpnode);
    public void visit(IfstmtNode tmpnode);
    public void visit(ReturnstmtNode tmpnode);
    public void visit(StmtNode tmpnode);
    public void visit(WhilestmtNode tmpnode);
}
